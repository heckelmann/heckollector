# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - id: heckollector
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

dockers:
  - image_templates: [ "ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}-amd64" ]
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.licenses=Apache-2.0
      - --label=org.opencontainers.image.description=OpenTelemetry Collector distribution for Heckelmann
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
  - image_templates: [ "ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}-arm64" ]
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/arm64/v8
      - --label=org.opencontainers.image.licenses=Apache-2.0
      - --label=org.opencontainers.image.description=OpenTelemetry Collector distribution for Heckelmann
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}

docker_manifests:
  - name_template: 'ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}'
    image_templates:
      - 'ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}-amd64'
      - 'ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}-arm64'
  - name_template: 'ghcr.io/heckelmann/{{ .ProjectName }}:latest'
    image_templates:
      - 'ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}-amd64'
      - 'ghcr.io/heckelmann/{{ .ProjectName }}:{{ .Version }}-arm64'

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
